#include "stdafx.h"
#include "MidiText.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

#include <stdio.h>

IMPLEMENT_DYNAMIC(CMidiChannelPressure, CMidiEvent)

//
////////////////////////////////////////////////////////////////////////////////////
//		Channel Pressure
//
////////////////////////////////////////////////////////////////////////////////////
CMidiChannelPressure::CMidiChannelPressure ( unsigned char cCommand, unsigned char *pBuffer )
{
	m_MidiEventStartOfBuffer	= pBuffer;

	m_cMidiEventCode			= MIDI_EVENT_CODE_CHANPRESS;
	m_cMidiEventChannel			= 0xff;
	m_cMidiPressure				= 0x00;

	//		Check Event code
	if ( ( cCommand & OPERATION_MASK ) != m_cMidiEventCode )
	{
		EventMessageBox("CMidiChannelPressure Code Differ");
	}

	//	Set the Event Index.
	m_iEventIndex				= MIDI_EVENT_CHANNELPRES;

	m_cMidiEventChannel			= cCommand & CHANNEL_MASK;

	//		Set Event code.
	m_cMidiEventCode			|= ( m_cMidiEventChannel & CHANNEL_MASK );

	//
	m_cMidiPressure				= *pBuffer;
	m_cMidiEventSubCode			= *pBuffer;

	pBuffer++;
	m_MidiEventEndOfBuffer		= pBuffer;
}

//
////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////
CMidiChannelPressure::CMidiChannelPressure ( unsigned int iChannel,	unsigned char cVal1 )
{
	m_cMidiEventCode			= MIDI_EVENT_CODE_CHANPRESS;
	m_cMidiEventChannel			= iChannel;
	m_cMidiPressure				= cVal1;
	m_cMidiEventSubCode			= cVal1;

	//		Set Event code.
	m_cMidiEventCode			|= ( m_cMidiEventChannel & CHANNEL_MASK );

	//	Set the Event Index.
	m_iEventIndex				= MIDI_EVENT_CHANNELPRES;
}

//
////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////
CMidiChannelPressure::~CMidiChannelPressure ()
{
	Free ();
}

//
////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////
void CMidiChannelPressure::Save( FILE *hFile)
{
	if ( hFile != NULL )
	{
		fwrite ( &m_cMidiEventCode, 1, 1, hFile );
		fwrite ( &m_cMidiPressure, 1, 1, hFile );
	}
}

//
////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////
DWORD CMidiChannelPressure::GetChunk()
{
	m_dwMidiChunk = m_cMidiEventCode + 256 * m_cMidiPressure;
	return m_dwMidiChunk;
}

//
////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////
const unsigned char *CMidiChannelPressure::GetEventText() const
{
	return ( GetEventSmallText ( MIDI_EVENT_CHANNELPRES ) );
}

//
////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////
void CMidiChannelPressure::Trace( FILE *hFile)
{
	if ( hFile != NULL )
	{
		fprintf ( hFile, 
			"Channel: %2d - %s: %d\n", 
			m_cMidiEventChannel,
			GetEventSmallText ( MIDI_EVENT_CHANNELPRES ),
			m_cMidiPressure );
	}
}

//
////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////
void CMidiChannelPressure::Free ()
{
}

//
////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////
unsigned char CMidiChannelPressure::GetEventValue1() const
{
	return m_cMidiPressure;
}

//
////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////
void CMidiChannelPressure::SetEventValue1(unsigned char  val)
{
	m_cMidiPressure = val;
}

//
////////////////////////////////////////////////////////////////////////////////////
//
////////////////////////////////////////////////////////////////////////////////////
void CMidiChannelPressure::SetChannelAndCode(unsigned char cChannel)
{
	cChannel				= cChannel & CHANNEL_MASK;
	m_cMidiEventChannel		= cChannel;
	m_cMidiEventCode		= m_cMidiEventCode & OPERATION_MASK;
	m_cMidiEventCode		= m_cMidiEventCode | m_cMidiEventChannel;

}
