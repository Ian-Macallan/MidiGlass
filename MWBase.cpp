#include "stdafx.h"
#include "MWBase.h"


//
/////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////
const CRuntimeClass CMWBase::classCMWBase = {  "CMWBase", 0, 0, NULL, _GetBaseClass };

//
/////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////
CMWBase::CMWBase(void)
{
}


//
/////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////
CMWBase::~CMWBase(void)
{
}


//
/////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////
CRuntimeClass* PASCAL CMWBase::_GetBaseClass()
{
	CRuntimeClass *pRuntimeClass = NULL;
	return pRuntimeClass;
}

//
/////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////
CRuntimeClass* PASCAL CMWBase::GetThisClass()
{
	static CRuntimeClass thisClass = classCMWBase;
	return &thisClass;
}

//
/////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////
CRuntimeClass* CMWBase::GetRuntimeClass() const
{
	static CRuntimeClass runtimeClass = classCMWBase;
	return &runtimeClass;
}

//
/////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////
BOOL CMWBase::IsSerializable() const
{
	return FALSE;
}

//
/////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////
BOOL CMWBase::IsKindOf(const CRuntimeClass* pClass) const
{
	if ( pClass == NULL )
	{
		return FALSE;
	}

	if ( this->GetRuntimeClass() == NULL )
	{
		return FALSE;
	}

	if ( pClass->m_lpszClassName == NULL )
	{
		return FALSE;
	}

	CRuntimeClass *current = this->GetRuntimeClass();
	do
	{
		if ( strcmp ( pClass->m_lpszClassName, current->m_lpszClassName ) == 0 )
		{
			return TRUE;
		}

		if ( current->m_pfnGetBaseClass != NULL )
		{
			current = (*current->m_pfnGetBaseClass)();
		}
		else
		{
			current = NULL;
		}
	}
	while ( current != NULL );

	return FALSE;
}

